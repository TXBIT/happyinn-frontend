# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.0
jobs:
  checkout_code:
    docker:
      # specify the version you desire here
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  build-assets:
    docker:
      # specify the version you desire here
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Precompile assets
          command: npx ng build --prod
      - save_cache:
          key: v1-assets-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo/dist/happy-inn

  deploy:
    docker:
      - image: 'circleci/python:2.7'
    working_directory: ~/repo
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - restore_cache:
          key: v1-assets-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install awscli
          command: |
                  mkdir -p ~/.aws
                  echo "[profile eb-cli]
                  region = ap-southeast-1
                  aws_access_key_id = $AWS_ACCESS_KEY_ID
                  aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" > ~/.aws/config
                  sudo pip install awscli
                  sudo pip install awsebcli
      - run:
          name: Deploy on AWS S3
          command: |
                  aws s3 sync --acl public-read --delete ~/repo/dist/happy-inn s3://$S3_WEB
                  aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths '/*'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout_code
      - build-assets:
          requires:
            - checkout_code
      - deploy:
          requires:
            - build-assets
          filters:
            branches:
              only:
                - master
